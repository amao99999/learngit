package com.amao.Ademo_kp;

/*
    编程思想: 其实就是编程思路,我们开发中两种经典的编程思想其实就是面向过程编程思想和面向对象编程思想
        面向过程编程思想:强调的是过程,必须清楚每一步步骤,然后按照步骤一步一步去实现
        面向对象编程思想:强调的是对象,通过调用对象的行为来实现功能,而不是自己一步一步的去操作实现

    类
        类的概述:类具有共同属性和行为事物的统称,所以其实类在客观世界是不存在的,是抽象的,只是用来描述数据信息的
        类的组成: 1.属性:就是该事物的状态信息   2.行为:就是该事物能够做什么

    对象
        对象是类的一个实例,是具体存在的,看得见摸得着的,并且具备该类事物的属性和行为
            对象的属性:对象的属性具有特定的值
            对象的行为:对象可以操作的行为

                1.对象是类的实例,具体存在的,看得见摸得着的
                2.对象的属性是有具体的值
                3.对象的行为其实就是可以使用的功能

    类和对象的关系
                1.对象是根据类来创建的,类中有什么,对象就有什么   属性/行为
                  可以把类看成是对象的数据类型
                2.类中的属性和行为一定是该类事物共有的,对象的属性和行为是具体的

    类的定义: demo 02


    对象的创建和使用  demo03



 */
public class Summary {
    /*
    - 能够知道类和对象的关系
    对象是根据类来创建的,类中有什么对象就有什么
    一个类可以创建多个对象,多个对象之间是相互独立的
- 能够完成类的定义及使用
    public class 类名{
        成员变量   数据类型 变量名;
        成员方法   去掉static
    }
- 能够知道对象在内存中的初始化过程
    类名  对象名 = new 类名();
	访问成员变量:  对象名.成员变量名
    访问成员方法:  对象名.成员方法名(实参);
- 能够知道局部变量和成员变量的区别
     定义的位置不同: 成员变量定义在类中方法外,局部变量定义在方法中
     在内存中的位置不同: 成员变量是在堆区,局部变量是在栈区
     生命周期不同:
                成员变量是随着对象的创建而存在,随着对象的销毁而销毁
                局部变量是随着方法的调用而存在,随着方法调用完毕而销毁
     默认值不同:
                成员变量有默认值
                局部变量没有默认值,不赋值不能直接使用
     */
}
